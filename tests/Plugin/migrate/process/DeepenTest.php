<?php


namespace Drupal\idc_migration\Plugin\migrate\process;


use Drupal\Tests\migrate\Unit\process\MigrateProcessTestCase;

class DeepenTest extends MigrateProcessTestCase {
    private $underTest = NULL;

    protected function setUp() {
        parent::setUp();
        $this->underTest = new Deepen([], 'deepen', []);
    }

    // An array of bare values is transformed to an associative array
    public function testValueArray() {
        $result = $this->underTest->transform(['alpha', 'beta'], $this->migrateExecutable, $this->row, '');
        $this->assertSame([["value" => "alpha"], ["value" => "beta"]], $result);
    }

    // An array of indexed values is transformed to an associative array
    public function testNumericArray() {
        $result = $this->underTest->transform(['0' => 'alpha', '1' => 'beta'], $this->migrateExecutable, $this->row, '');
        $this->assertSame([["value" => "alpha"], ["value" => "beta"]], $result);
    }

    // An associative array has its key replaced with the configured value
    public function testAssociativeArray() {
        $result = $this->underTest->transform(['foo' => 'alpha', 'bar' => 'beta'], $this->migrateExecutable, $this->row, '');
        $this->assertSame([["value" => "alpha"], ["value" => "beta"]], $result);
    }

    // Ensure the configured value is used as the associative array key.
    public function testWithConfig() {
        $underTest = new Deepen(['keyname' => 'mykey'], 'deepen', []);
        $result = $underTest->transform(['alpha', 'beta'], $this->migrateExecutable, $this->row, '');
        $this->assertSame([["mykey" => "alpha"], ["mykey" => "beta"]], $result);
    }
}